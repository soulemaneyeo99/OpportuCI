# Generated by Django 5.2 on 2025-09-19 09:28

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('credibility', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CareerPath',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('icon', models.CharField(max_length=50)),
                ('color', models.CharField(default='#3B82F6', max_length=7)),
                ('total_levels', models.PositiveIntegerField(default=5)),
                ('estimated_duration_months', models.PositiveIntegerField(default=12)),
            ],
        ),
        migrations.CreateModel(
            name='MentorshipProgram',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('domain', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('min_experience_years', models.PositiveIntegerField()),
                ('min_credibility_points', models.PositiveIntegerField()),
                ('required_skills', models.JSONField(default=list)),
            ],
        ),
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('challenge_type', models.CharField(choices=[('daily', 'Défi quotidien'), ('weekly', 'Défi hebdomadaire'), ('monthly', 'Défi mensuel'), ('special', 'Défi spécial')], max_length=20)),
                ('target_type', models.CharField(max_length=50)),
                ('target_count', models.PositiveIntegerField()),
                ('reward_points', models.PositiveIntegerField()),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('is_active', models.BooleanField(default=True)),
                ('reward_badge', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='credibility.badge')),
            ],
        ),
        migrations.CreateModel(
            name='Mentor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_position', models.CharField(max_length=200)),
                ('company', models.CharField(max_length=200)),
                ('experience_years', models.PositiveIntegerField()),
                ('expertise_areas', models.JSONField(default=list)),
                ('max_mentees', models.PositiveIntegerField(default=3)),
                ('available_slots', models.PositiveIntegerField(default=3)),
                ('hourly_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_pro_bono', models.BooleanField(default=False)),
                ('total_mentees', models.PositiveIntegerField(default=0)),
                ('average_rating', models.DecimalField(decimal_places=2, default=0, max_digits=3)),
                ('response_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='mentor_profile', to=settings.AUTH_USER_MODEL)),
                ('programs', models.ManyToManyField(related_name='mentors', to='gamification.mentorshipprogram')),
            ],
        ),
        migrations.CreateModel(
            name='MentorshipRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('goals', models.TextField()),
                ('duration_weeks', models.PositiveIntegerField()),
                ('preferred_meeting_frequency', models.CharField(max_length=50)),
                ('status', models.CharField(choices=[('pending', 'En attente'), ('accepted', 'Acceptée'), ('rejected', 'Rejetée'), ('completed', 'Terminée')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('responded_at', models.DateTimeField(blank=True, null=True)),
                ('mentee', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mentorship_requests', to=settings.AUTH_USER_MODEL)),
                ('mentor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_requests', to='gamification.mentor')),
                ('program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamification.mentorshipprogram')),
            ],
        ),
        migrations.CreateModel(
            name='MentorshipSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scheduled_at', models.DateTimeField()),
                ('duration_minutes', models.PositiveIntegerField(default=60)),
                ('mentee_notes', models.TextField(blank=True)),
                ('mentor_notes', models.TextField(blank=True)),
                ('mentee_rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('completed', models.BooleanField(default=False)),
                ('cancelled', models.BooleanField(default=False)),
                ('cancel_reason', models.TextField(blank=True)),
                ('mentorship', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='gamification.mentorshiprequest')),
            ],
        ),
        migrations.CreateModel(
            name='UserCareerProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_level', models.PositiveIntegerField(default=1)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('career_path', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamification.careerpath')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='CareerLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.PositiveIntegerField()),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('required_points', models.PositiveIntegerField()),
                ('required_skills', models.JSONField(default=list)),
                ('required_badges', models.ManyToManyField(blank=True, to='credibility.badge')),
                ('career_path', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='levels', to='gamification.careerpath')),
            ],
            options={
                'ordering': ['career_path', 'level'],
                'unique_together': {('career_path', 'level')},
            },
        ),
        migrations.CreateModel(
            name='UserChallengeProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('current_count', models.PositiveIntegerField(default=0)),
                ('completed', models.BooleanField(default=False)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='gamification.challenge')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'challenge')},
            },
        ),
    ]
