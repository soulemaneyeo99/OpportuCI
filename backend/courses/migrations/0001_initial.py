# Generated by Django 5.2 on 2025-05-08 05:14

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('formations', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField()),
                ('instructor', models.CharField(max_length=255)),
                ('duration_minutes', models.PositiveIntegerField()),
                ('difficulty', models.CharField(choices=[('beginner', 'Débutant'), ('intermediate', 'Intermédiaire'), ('advanced', 'Avancé'), ('expert', 'Expert')], default='beginner', max_length=15)),
                ('order', models.PositiveIntegerField(default=1)),
                ('is_published', models.BooleanField(db_index=True, default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('formation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='formations.formation')),
            ],
            options={
                'ordering': ['formation', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('slug', models.SlugField(blank=True)),
                ('content', models.TextField()),
                ('type', models.CharField(choices=[('video', 'Vidéo'), ('article', 'Article'), ('quiz', 'Quiz'), ('exercise', 'Exercice'), ('project', 'Projet')], default='video', max_length=10)),
                ('video_url', models.URLField(blank=True, null=True)),
                ('duration_minutes', models.PositiveIntegerField(default=0)),
                ('order', models.PositiveIntegerField(default=1)),
                ('is_published', models.BooleanField(db_index=True, default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='courses.course')),
            ],
            options={
                'ordering': ['course', 'order'],
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('difficulty', models.CharField(choices=[('easy', 'Facile'), ('medium', 'Moyen'), ('hard', 'Difficile')], default='medium', max_length=10)),
                ('points', models.PositiveIntegerField(default=1)),
                ('explanation', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='courses.lesson')),
            ],
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.CharField(max_length=255)),
                ('is_correct', models.BooleanField(db_index=True, default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='courses.question')),
            ],
        ),
        migrations.CreateModel(
            name='UserAnswer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_correct', models.BooleanField(db_index=True, default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('answer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_selections', to='courses.answer')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_answers', to='courses.question')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('completed', models.BooleanField(db_index=True, default=False)),
                ('completion_date', models.DateTimeField(blank=True, null=True)),
                ('last_position_seconds', models.PositiveIntegerField(default=0)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_progress', to='courses.lesson')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_progress', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'User Progress',
            },
        ),
        migrations.AddIndex(
            model_name='course',
            index=models.Index(fields=['is_published', 'formation'], name='courses_cou_is_publ_f374b9_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='course',
            unique_together={('formation', 'order')},
        ),
        migrations.AddIndex(
            model_name='lesson',
            index=models.Index(fields=['course', 'is_published'], name='courses_les_course__acf0a8_idx'),
        ),
        migrations.AddIndex(
            model_name='lesson',
            index=models.Index(fields=['type'], name='courses_les_type_805272_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='lesson',
            unique_together={('course', 'order')},
        ),
        migrations.AddIndex(
            model_name='question',
            index=models.Index(fields=['lesson'], name='courses_que_lesson__6cd326_idx'),
        ),
        migrations.AddIndex(
            model_name='answer',
            index=models.Index(fields=['question', 'is_correct'], name='courses_ans_questio_15ab48_idx'),
        ),
        migrations.AddIndex(
            model_name='useranswer',
            index=models.Index(fields=['user', 'is_correct'], name='courses_use_user_id_ca91ff_idx'),
        ),
        migrations.AddIndex(
            model_name='useranswer',
            index=models.Index(fields=['question', 'is_correct'], name='courses_use_questio_bfdffe_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='useranswer',
            unique_together={('user', 'question')},
        ),
        migrations.AddIndex(
            model_name='userprogress',
            index=models.Index(fields=['user', 'completed'], name='courses_use_user_id_d12477_idx'),
        ),
        migrations.AddIndex(
            model_name='userprogress',
            index=models.Index(fields=['lesson', 'user'], name='courses_use_lesson__6b3bb6_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='userprogress',
            unique_together={('user', 'lesson')},
        ),
    ]
